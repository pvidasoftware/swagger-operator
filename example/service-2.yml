apiVersion: apps/v1
kind: Deployment
metadata:
  name: "deployment2"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "deployment2"
  template:
    metadata:
      labels:
        app: "deployment2"
    spec:
      containers:
        - name: "service-2"
          image: "registry.localhost:5000/service1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "service2"
  annotations:
    swagger-path: "/service2/swagger/service-example-0.0.yml"
spec:
  selector:
    app: "deployment2"
  type: ClusterIP
  ports:
    - protocol: "TCP"
      port: 8080
      name: http

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: service2
spec:
  stripPrefix:
    prefixes:
      - /service2

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: service2
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/service2`)
      kind: Rule
      services:
        - name: service2
          port: http
      middlewares:
        - name: service2
