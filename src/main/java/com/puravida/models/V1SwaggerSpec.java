/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.puravida.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1SwaggerSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-09-20T10:28:39.638Z[Etc/UTC]")
public class V1SwaggerSpec {
  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private String configMap;

  public static final String SERIALIZED_NAME_DEPLOYMENT = "deployment";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT)
  private String deployment;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private String service;

  public static final String SERIALIZED_NAME_SERVICE_SELECTOR = "serviceSelector";
  @SerializedName(SERIALIZED_NAME_SERVICE_SELECTOR)
  private String serviceSelector;


  public V1SwaggerSpec configMap(String configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @ApiModelProperty(required = true, value = "")

  public String getConfigMap() {
    return configMap;
  }


  public void setConfigMap(String configMap) {
    this.configMap = configMap;
  }


  public V1SwaggerSpec deployment(String deployment) {
    
    this.deployment = deployment;
    return this;
  }

   /**
   * Get deployment
   * @return deployment
  **/
  @ApiModelProperty(required = true, value = "")

  public String getDeployment() {
    return deployment;
  }


  public void setDeployment(String deployment) {
    this.deployment = deployment;
  }


  public V1SwaggerSpec service(String service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @ApiModelProperty(required = true, value = "")

  public String getService() {
    return service;
  }


  public void setService(String service) {
    this.service = service;
  }


  public V1SwaggerSpec serviceSelector(String serviceSelector) {
    
    this.serviceSelector = serviceSelector;
    return this;
  }

   /**
   * Get serviceSelector
   * @return serviceSelector
  **/
  @ApiModelProperty(required = true, value = "")

  public String getServiceSelector() {
    return serviceSelector;
  }


  public void setServiceSelector(String serviceSelector) {
    this.serviceSelector = serviceSelector;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1SwaggerSpec v1SwaggerSpec = (V1SwaggerSpec) o;
    return Objects.equals(this.configMap, v1SwaggerSpec.configMap) &&
        Objects.equals(this.deployment, v1SwaggerSpec.deployment) &&
        Objects.equals(this.service, v1SwaggerSpec.service) &&
        Objects.equals(this.serviceSelector, v1SwaggerSpec.serviceSelector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configMap, deployment, service, serviceSelector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1SwaggerSpec {\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    deployment: ").append(toIndentedString(deployment)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    serviceSelector: ").append(toIndentedString(serviceSelector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

